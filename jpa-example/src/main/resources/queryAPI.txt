## JPQL
    - JPA를 사용하면 엔티티 객체를 중심으로 개발 하게 됨
    - 검색할 때도 테이블이 아닌 엔티티 객체를 대상으로 검색 -> 모든 DB데이터를 객체로 변환해서 검색하는 것은 불가능
    = 애플리케이션이 필요한 데이터만 db에서 불러오려면 검색 조건 (where, group by 등)이 포함된 sql 필요
        => SQL 을 추상화한 JPQL (객체 지향 쿼리 언어): 엔티티 객체를 대상으로 쿼리

## QueryDSL
    - 문자가 아닌 자바코드로 JPQL 작성 가능
    - JPQL 빌더 역할, 컴파일 시점에 문법 오류 찾을 수 있음
    - 동적쿼리 작성 편리

## 네이티브 SQL
    - JPA가 제공하는 SQL을 직접 사용하는 기능 -> JPQL로 해결할 수없는 특정 DB에 의존적인 기능을 사용할 때 필요
    - JPA를 사용하면서 JDBC 커넥션을 직접 사용하거나, 마이바티스등을 함께 사용가능
    - 영속성 컨텍스트를 적절한 시점에 강제로 플러시 해줘야 함